#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: c40c5161-7c26-4aea-a196-84ab9f27d701
# Source File: C:\Users\cmarble\Documents\SAPIEN\PowerShell Studio\Files\VEROFfice365Gui.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2017 v5.4.143
     Generated on:       8/15/2017 11:13 AM
     Generated by:       cmarble
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2017
#>


#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Show-VEROFfice365Gui_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Windows.Forms.DataVisualization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formVERMicrosoftOffice36 = New-Object 'System.Windows.Forms.Form'
	$label2 = New-Object 'System.Windows.Forms.Label'
	$labelOutput = New-Object 'System.Windows.Forms.Label'
	$progressbar1 = New-Object 'System.Windows.Forms.ProgressBar'
	$labelAdminEmail = New-Object 'System.Windows.Forms.Label'
	$picturebox1 = New-Object 'System.Windows.Forms.PictureBox'
	$labelAdminPassword = New-Object 'System.Windows.Forms.Label'
	$output = New-Object 'System.Windows.Forms.RichTextBox'
	$adminPassword = New-Object 'System.Windows.Forms.TextBox'
	$adminEmail = New-Object 'System.Windows.Forms.TextBox'
	$buttonLogin = New-Object 'System.Windows.Forms.Button'
	$tabs1 = New-Object 'System.Windows.Forms.TabControl'
	$calendarTab1 = New-Object 'System.Windows.Forms.TabPage'
	$labelUserEmailAddress = New-Object 'System.Windows.Forms.Label'
	$CalendarTabInstructions = New-Object 'System.Windows.Forms.Label'
	$emailControl1 = New-Object 'System.Windows.Forms.GroupBox'
	$calendarSetRemove = New-Object 'System.Windows.Forms.RadioButton'
	$calendarSetOwner = New-Object 'System.Windows.Forms.RadioButton'
	$calendarSetWrite = New-Object 'System.Windows.Forms.RadioButton'
	$calendarSetRead = New-Object 'System.Windows.Forms.RadioButton'
	$buttonCheckPermissions = New-Object 'System.Windows.Forms.Button'
	$calEmail = New-Object 'System.Windows.Forms.Label'
	$UserEmail = New-Object 'System.Windows.Forms.TextBox'
	$CalendarEmail = New-Object 'System.Windows.Forms.TextBox'
	$buttonSetPermissions = New-Object 'System.Windows.Forms.Button'
	$ForwardToInput = New-Object 'System.Windows.Forms.TabPage'
	$groupbox3 = New-Object 'System.Windows.Forms.GroupBox'
	$RemoveLicenseOption = New-Object 'System.Windows.Forms.CheckBox'
	$ChangePasswordOption = New-Object 'System.Windows.Forms.CheckBox'
	$DisableAccountOption = New-Object 'System.Windows.Forms.CheckBox'
	$DisableASOWAOption = New-Object 'System.Windows.Forms.CheckBox'
	$RemoveFromDGOption = New-Object 'System.Windows.Forms.CheckBox'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$DelegateAccessNo = New-Object 'System.Windows.Forms.RadioButton'
	$DelegateAccessYes = New-Object 'System.Windows.Forms.RadioButton'
	$DelegateAccessField = New-Object 'System.Windows.Forms.TextBox'
	$DelegateAccessLabel = New-Object 'System.Windows.Forms.Label'
	$buttonCheckLicenses = New-Object 'System.Windows.Forms.Button'
	$buttonTerminateUser = New-Object 'System.Windows.Forms.Button'
	$ForwardTermedUserInput = New-Object 'System.Windows.Forms.TextBox'
	$ForwardEmailsTo = New-Object 'System.Windows.Forms.Label'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$EnableForwardingNo = New-Object 'System.Windows.Forms.RadioButton'
	$EnableForwardingYes = New-Object 'System.Windows.Forms.RadioButton'
	$TerminatedUser = New-Object 'System.Windows.Forms.TextBox'
	$labelTerminatedUsersEmail = New-Object 'System.Windows.Forms.Label'
	$GroupTab1 = New-Object 'System.Windows.Forms.TabPage'
	$labelToBeImplemented = New-Object 'System.Windows.Forms.Label'
	$tabpage1 = New-Object 'System.Windows.Forms.TabPage'
	$label1 = New-Object 'System.Windows.Forms.Label'
	$fontdialog1 = New-Object 'System.Windows.Forms.FontDialog'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	#### LAUNCH SEQUENCE ###
	$ProgressPreference = 'silentlyContinue'
	Import-Module ActiveDirectory
	try
	{
		mkdir "C:\Disabled User Logs"
		output.appendtext("`nDisabled User Logs folder not found and was created.")
	}
	catch
	{
		#Do nothing, it exists.
	}
	
	# Login function
	function login
	{
		#These two fields grab the text in the text boxes
	
		$username = $adminEmail.Text
		$password = $adminPassword.Text
		
		#This takes the password and converts it to a secure string (Despite it already being so) and making it usable for automatic login.
		$pass = ConvertTo-SecureString -String $password -AsPlainText -Force
		$cred = New-Object -TypeName System.Management.Automation.PSCredential($username, $pass)
		try
		{
			#Connect to Office365 Tenant
			$output.AppendText("`nAttemping login as $username to Office365 Tenant..")
			$Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri https://outlook.office365.com/powershell-liveid/ -Credential $cred -Authentication Basic -AllowRedirection
			Import-PSSession -session $Session
			
			#Connect to Azure Tenant
			$output.AppendText("`nSuccess. Attempting signing into Azure Active Directory..")
			Connect-MsolService -Credential $cred
			
			#Succesful Login / Welcome & Titlebar Change 
			$you = get-user -identity $username | Select-Object DisplayName
			$you = $you -replace ".*=" -replace "}"
			$output.AppendText("`nLogin Succeeded.`nWelcome back $you")
			$formVERMicrosoftOffice36.Text = "VER Microsoft Office365 Tool. Logged in as $username"
			
			# Clear user name if you need to login as someone else for whatever reason.
			$adminEmail.Text = ""
			
			#Put your pretty face in the picture box
			$picturebox2.ImageLocation = "https://outlook.office365.com/owa/service.svc/s/GetPersonaPhoto?email=$username&UA=0&size=HR64x64&sc=1502815841449"
		}
		
		catch
		{
			$output.AppendText("`nLogin Failed. Please check your credentials.")
		}
		
		#Clears password after login or failure for easier reattempt
	
		$adminPassword.Text = ""
	}
	
	function check_calendar
	{
		try
		{
			$folder = '{0}:\calendar' -f $CalendarEmail.Text
	
			$calendars = Get-MailboxFolderPermission -identity $folder | Select-Object User, AccessRights | Out-String
			$calendars = $calendars -replace "[{}]"
			
			$output.Text = $calendars
		}
		
		catch
		{
			$output.AppendText("Calendar not found. Check spelling or if it exists.")
		}
		
	}
	
	function set_calendar_permissions
	{
		$calendar = '{0}:\calendar' -f $CalendarEmail.Text
		$user = '{0}' -f $UserEmail.Text
		if ($calendarSetRead.Checked -eq $true)
		{
			$output.AppendText("`nAdding Read Permissions to $user")
			Add-MailboxFolderPermission -identity $calendar -user $user -AccessRights "Reviewer"
			check_calendar
		}
		
		elseif ($calendarSetWrite.Checked -eq $True)
		{
			$output.AppendText("`r adding Read Permissions to $user")
			Add-MailboxFolderPermission -identity $calendar -user $user -AccessRights "Editor"
			check_calendar
		}
		
		elseif ($calendarSetOwner.Checked -eq $true)
		{
			$output.AppendText("`nAdding Read Permissions to $user")
			Add-MailboxFolderPermission -identity $calendar -user $user -AccessRights "Owner"
			check_calendar
		}
		
		elseif ($calendarSetRemove.Checked -eq $True)
		{
			$output.AppendText("`nRemoving permissions from $user")
			Remove-MailboxFolderPermission -identity $calendar -user $user
			$output.AppendText("`nPermissions from $user removed from $calendar")
		}
		
		else
		{
			$output.text = "No permissions set to add. Please select a level of permissions for this user."
		}
	}
	
	function terminate_user
	{
		#Get User Names
		$termedUser = '{0}' -f $TerminatedUserInput.Text
		$forwardUser = '{0}' -f $ForwardTermedUserInput.Text
		
	
		# Checking for fowarding request
		If ($EnableForwardingYes.Checked -eq $True)
		{
			#Forward Email
			try
			{
				Set-Mailbox $termedUser -ForwardingAddress $forwardUser
				$output.AppendText("done.`nForwarding email from $termedUser to $forwardUser...")
			}
			catch
			{
				$output.AppendText("`nError forwarding accounts. Check Terminated and Forwarding addresses.")
			}
			#Change Description
			Set-ADUSer -Identity $termedUser -Description "Terminated. Email forwarding to $forwardUser"
		}
		
		# If no forwarding request, go with 
		ElseIf ($EnableForwardingNo.Checked -eq $True)
		{
			#Change Description (if not forwarding)
			$output.AppendText("done.`nChanging description...")
			Set-ADUser -Identity $termedUser -Description "Terminated. No Licenses"
		}
		
			If ($DisableAccountOption.Checked -eq $true)
		{
			#Disable AD Account
			$output.AppendText("`nDisabling Account...")
			Disable-ADAccount $termedUser
		}
		
		
		#Checking for Delegate
		
		
		### CHECKBOX GROUP ###
		
		
		If ($DisableAccountOption.Checked -eq $true)
		{
			#Disable AD Account
			$output.AppendText("`nDisabling Account...")
			Disable-ADAccount $termedUser
			$output.AppendText("done.")
		}
		
		If ($RemoveFromDGOption.Checked -eq $True)
		{
			#Remove from ALL Distribution Groups. Need to test with a test account.
			$output.AppendText("`nRemoving user from all Distribution Groups...")
			try
			{
				(Get-ADUser $termedUser -Properties MemberOf).memberOf |
				ForEach-Object { Remove-ADGroupMember -Identity $_ -Members $termedUser }
			}
			catch
			{
				$output.AppendText("`nError. Are you connected to the network? Cannot remove user from AD groups.")
			}
		}
		
		If ($ChangePasswordOption.Checked -eq $True)
		{
			$output.AppendText("`nGenerating randomized 21 character password and applying...")
			#Randomize Change Password 10 random characters, 5 integers, 10 more characters.
			$a = -join ((65 .. 90) + (97 .. 122) | Get-Random -Count 10 | %{ [char]$_ }) #<-- Random letters. Picks an integer between 65 and 90(lower) and 97-122(caps) and then matches that to its ASCII code in char to generate a letter.
			$b = (10000 .. 99999) | Get-Random -Count 1 #<-- Random lumber, between 10000-99999. Only run once.
			$c = -join ((65 .. 90) + (97 .. 122) | Get-Random -Count 10 | %{ [char]$_ }) #<-- Repeat letter randomization process
			$newpass = $a + $b + $c # Concatenate the strings
			Set-ADAccountPassword -Identity $termedUser -NewPassword $newpass
			$output.AppendText("done.")
		}
		
		
		If ($RemoveLicenseOption.Checked -eq $True)
		{
			#Remove any licenses assigned, all of em.
			try
			{
				$output.appendtext("`nRemoving all Office365 Licenses...")
				(get-MsolUser -UserPrincipalName $termedUser).licenses.AccountSkuId |
				foreach{
					Set-MsolUserLicense -UserPrincipalName $termedUser -RemoveLicenses $_
				}
			}
			catch
			{
				$output.appendtext("error. Please verify that you've successfully logged into the Azure Tenant.")
			}
			$output.AppendText("done.")
		}
		
		If ($DisableASOWAOption.Checked -eq $True)
		{
			#Disable ActiveSync and OWA for Mobile Devices
			$output.AppendText("`nDisabling ActiveSync and OWA for MobileDevices...")
			Set-CASMailbox $termedUser -OWAEnabled $false -PopEnabled $false
		
			#Moves to Disabled User Accounts OU
			$output.AppendText("done.`nMoving to Disabled User Accounts OU...")
			$DisabledOU = "ou=Disabled User Accounts,dc=sales,dc=verrents,dc=com"
			Get-ADUser $termedUser | Move-AdObject -TargetPath $DisabledOU
		}
		
		#Saves a log of work done
		$output.AppendText("done.`n$termedUser has been disabled.")
		#Since we can't have special characters in file names, we need to remove the alias from the email address.
		$termedUser = $termedUser.Split("@")[0]
		
		#Then this grabs todays date in Year-Month-Day format
		$today = Get-Date -UFormat "%Y-%m-%d"
		
		#Then we concatenate the two together
		$filename = $termedUser + $today
		$output.AppendText("`nSaving termination run to log folder.")
		
		<#This grabs all of the appended text from the job run and then it saves it to the Disabled User Logs folder. This folder is created when you first run the program.
		I'll add a button later to make it at your request. or better yet, add the option to save it where you want.#>
		$output.text | Out-File "C:\Disabled User Logs\$filename.txt"
		
	}
	
	## BUTTONS! :D ##
	
	$buttonLogin_Click = {
		login
	}
	
	$buttonCheckPermissions_Click = {
		$output.Text = "Grabbing calendar information. This window will refresh once this is finished."
		check_calendar
	}
						
	$buttonSetPermissions_Click = {
		set_calendar_permissions
	}
	
	$EnableForwardingYes_CheckedChanged={
		$ForwardEmailsTo.Enabled = $true
		$ForwardTermedUserInput.Enabled = $true
	}
	
	$buttonTerminateUser_Click={
		terminate_user
	}
	
	$EnableForwardingNo_CheckedChanged = {
		$ForwardEmailsTo.Enabled = $False
		$ForwardTermedUserInput.Enabled = $False
	}
	
	$buttonCheckLicenses_Click = {
		$check = '{0}' -f $TerminatedUser.Text
		$license_check = Get-MsolUser -UserPrincipalName $check | Select-Object DisplayName, Licenses | Out-String
		$output.Text = $license_check
	}
	
	$DelegateAccessYes_CheckedChanged={
		$DelegateAccessLabel.Enabled = $True
		$DelegateAccessField.Enabled = $True
	}
	
	$DelegateAccessNo_CheckedChanged={
		$DelegateAccessLabel.Enabled = $False
		$DelegateAccessField.Enabled = $False
		
	}
	
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formVERMicrosoftOffice36.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonLogin.remove_Click($buttonLogin_Click)
			$buttonCheckPermissions.remove_Click($buttonCheckPermissions_Click)
			$buttonSetPermissions.remove_Click($buttonSetPermissions_Click)
			$DelegateAccessNo.remove_CheckedChanged($DelegateAccessNo_CheckedChanged)
			$DelegateAccessYes.remove_CheckedChanged($DelegateAccessYes_CheckedChanged)
			$buttonCheckLicenses.remove_Click($buttonCheckLicenses_Click)
			$buttonTerminateUser.remove_Click($buttonTerminateUser_Click)
			$EnableForwardingNo.remove_CheckedChanged($EnableForwardingNo_CheckedChanged)
			$EnableForwardingYes.remove_CheckedChanged($EnableForwardingYes_CheckedChanged)
			$formVERMicrosoftOffice36.remove_Load($Form_StateCorrection_Load)
			$formVERMicrosoftOffice36.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formVERMicrosoftOffice36.SuspendLayout()
	$tabs1.SuspendLayout()
	$calendarTab1.SuspendLayout()
	$emailControl1.SuspendLayout()
	$ForwardToInput.SuspendLayout()
	$groupbox1.SuspendLayout()
	$GroupTab1.SuspendLayout()
	$tabpage1.SuspendLayout()
	$groupbox2.SuspendLayout()
	$groupbox3.SuspendLayout()
	#
	# formVERMicrosoftOffice36
	#
	$formVERMicrosoftOffice36.Controls.Add($label2)
	$formVERMicrosoftOffice36.Controls.Add($labelOutput)
	$formVERMicrosoftOffice36.Controls.Add($progressbar1)
	$formVERMicrosoftOffice36.Controls.Add($labelAdminEmail)
	$formVERMicrosoftOffice36.Controls.Add($picturebox1)
	$formVERMicrosoftOffice36.Controls.Add($labelAdminPassword)
	$formVERMicrosoftOffice36.Controls.Add($output)
	$formVERMicrosoftOffice36.Controls.Add($adminPassword)
	$formVERMicrosoftOffice36.Controls.Add($adminEmail)
	$formVERMicrosoftOffice36.Controls.Add($buttonLogin)
	$formVERMicrosoftOffice36.Controls.Add($tabs1)
	$formVERMicrosoftOffice36.AutoScaleDimensions = '13, 26'
	$formVERMicrosoftOffice36.AutoScaleMode = 'Font'
	$formVERMicrosoftOffice36.ClientSize = '1103, 1019'
	$formVERMicrosoftOffice36.FormBorderStyle = 'Fixed3D'
	$formVERMicrosoftOffice36.MaximizeBox = $False
	$formVERMicrosoftOffice36.Name = 'formVERMicrosoftOffice36'
	$formVERMicrosoftOffice36.Text = 'VER Microsoft Office365 Tool'
	#
	# label2
	#
	$label2.AutoSize = $True
	$label2.Location = '445, 0'
	$label2.Margin = '6, 0, 6, 0'
	$label2.Name = 'label2'
	$label2.Size = '70, 26'
	$label2.TabIndex = 8
	$label2.Text = 'label2'
	#
	# labelOutput
	#
	$labelOutput.AutoSize = $True
	$labelOutput.Location = '13, 548'
	$labelOutput.Margin = '6, 0, 6, 0'
	$labelOutput.Name = 'labelOutput'
	$labelOutput.Size = '77, 26'
	$labelOutput.TabIndex = 7
	$labelOutput.Text = 'Output'
	#
	# progressbar1
	#
	$progressbar1.Location = '13, 976'
	$progressbar1.Margin = '6, 6, 6, 6'
	$progressbar1.Name = 'progressbar1'
	$progressbar1.Size = '1078, 44'
	$progressbar1.TabIndex = 6
	#
	# labelAdminEmail
	#
	$labelAdminEmail.AutoSize = $True
	$labelAdminEmail.Location = '454, 52'
	$labelAdminEmail.Margin = '6, 0, 6, 0'
	$labelAdminEmail.Name = 'labelAdminEmail'
	$labelAdminEmail.Size = '137, 26'
	$labelAdminEmail.TabIndex = 0
	$labelAdminEmail.Text = 'Admin Email'
	#
	# picturebox1
	#
	$picturebox1.ImageLocation = 'C:\Users\cmarble\Documents\o365pspro\office365.PNG'
	$picturebox1.Location = '13, 22'
	$picturebox1.Margin = '6, 6, 6, 6'
	$picturebox1.Name = 'picturebox1'
	$picturebox1.Size = '395, 94'
	$picturebox1.SizeMode = 'StretchImage'
	$picturebox1.TabIndex = 5
	$picturebox1.TabStop = $False
	#
	# labelAdminPassword
	#
	$labelAdminPassword.AutoSize = $True
	$labelAdminPassword.Location = '682, 52'
	$labelAdminPassword.Margin = '6, 0, 6, 0'
	$labelAdminPassword.Name = 'labelAdminPassword'
	$labelAdminPassword.Size = '177, 26'
	$labelAdminPassword.TabIndex = 0
	$labelAdminPassword.Text = 'Admin Password'
	#
	# output
	#
	$output.AccessibleRole = 'None'
	$output.BackColor = 'ActiveCaptionText'
	$output.Font = 'Lucida Console, 7.875pt'
	$output.ForeColor = 'LightGreen'
	$output.Location = '13, 580'
	$output.Margin = '6, 6, 6, 6'
	$output.Name = 'output'
	$output.ReadOnly = $True
	$output.ScrollBars = 'Vertical'
	$output.Size = '1078, 392'
	$output.TabIndex = 0
	$output.Text = ''
	#
	# adminPassword
	#
	$adminPassword.Location = '682, 84'
	$adminPassword.Margin = '6, 6, 6, 6'
	$adminPassword.Name = 'adminPassword'
	$adminPassword.PasswordChar = '●'
	$adminPassword.Size = '212, 32'
	$adminPassword.TabIndex = 2
	#
	# adminEmail
	#
	$adminEmail.Location = '454, 84'
	$adminEmail.Margin = '6, 6, 6, 6'
	$adminEmail.Name = 'adminEmail'
	$adminEmail.Size = '212, 32'
	$adminEmail.TabIndex = 1
	#
	# buttonLogin
	#
	$buttonLogin.Location = '906, 84'
	$buttonLogin.Margin = '6, 6, 6, 6'
	$buttonLogin.Name = 'buttonLogin'
	$buttonLogin.Size = '148, 32'
	$buttonLogin.TabIndex = 3
	$buttonLogin.Text = 'Login'
	$buttonLogin.UseVisualStyleBackColor = $True
	$buttonLogin.add_Click($buttonLogin_Click)
	#
	# tabs1
	#
	$tabs1.Controls.Add($calendarTab1)
	$tabs1.Controls.Add($ForwardToInput)
	$tabs1.Controls.Add($GroupTab1)
	$tabs1.Controls.Add($tabpage1)
	$tabs1.Location = '6, 152'
	$tabs1.Margin = '6, 6, 6, 6'
	$tabs1.Name = 'tabs1'
	$tabs1.SelectedIndex = 0
	$tabs1.Size = '1093, 390'
	$tabs1.TabIndex = 0
	#
	# calendarTab1
	#
	$calendarTab1.Controls.Add($labelUserEmailAddress)
	$calendarTab1.Controls.Add($CalendarTabInstructions)
	$calendarTab1.Controls.Add($emailControl1)
	$calendarTab1.Controls.Add($buttonCheckPermissions)
	$calendarTab1.Controls.Add($calEmail)
	$calendarTab1.Controls.Add($UserEmail)
	$calendarTab1.Controls.Add($CalendarEmail)
	$calendarTab1.Controls.Add($buttonSetPermissions)
	$calendarTab1.BackColor = 'Control'
	$calendarTab1.Location = '8, 40'
	$calendarTab1.Margin = '6, 6, 6, 6'
	$calendarTab1.Name = 'calendarTab1'
	$calendarTab1.Padding = '3, 3, 3, 3'
	$calendarTab1.Size = '1077, 342'
	$calendarTab1.TabIndex = 0
	$calendarTab1.Text = 'Calendar Permissions'
	#
	# labelUserEmailAddress
	#
	$labelUserEmailAddress.AutoSize = $True
	$labelUserEmailAddress.Location = '723, 120'
	$labelUserEmailAddress.Margin = '6, 0, 6, 0'
	$labelUserEmailAddress.Name = 'labelUserEmailAddress'
	$labelUserEmailAddress.Size = '206, 26'
	$labelUserEmailAddress.TabIndex = 9
	$labelUserEmailAddress.Text = 'User Email Address'
	#
	# CalendarTabInstructions
	#
	$CalendarTabInstructions.Location = '9, 36'
	$CalendarTabInstructions.Margin = '6, 0, 6, 0'
	$CalendarTabInstructions.Name = 'CalendarTabInstructions'
	$CalendarTabInstructions.Size = '385, 306'
	$CalendarTabInstructions.TabIndex = 0
	$CalendarTabInstructions.Text = 'Type the persons name you''re interested in adding into the Target User field and type the calendar you wish to add them to in the Calendar Address field. 

If you wish to check the permissions of an existing calendar, type the calendar in question to the Calendar Address section and click Check Permissions.'
	#
	# emailControl1
	#
	$emailControl1.Controls.Add($calendarSetRemove)
	$emailControl1.Controls.Add($calendarSetOwner)
	$emailControl1.Controls.Add($calendarSetWrite)
	$emailControl1.Controls.Add($calendarSetRead)
	$emailControl1.Location = '427, 36'
	$emailControl1.Margin = '6, 6, 6, 6'
	$emailControl1.Name = 'emailControl1'
	$emailControl1.Padding = '6, 6, 6, 6'
	$emailControl1.Size = '266, 284'
	$emailControl1.TabIndex = 7
	$emailControl1.TabStop = $False
	$emailControl1.Text = 'Mailbox Permissions'
	#
	# calendarSetRemove
	#
	$calendarSetRemove.Location = '13, 211'
	$calendarSetRemove.Margin = '6, 6, 6, 6'
	$calendarSetRemove.Name = 'calendarSetRemove'
	$calendarSetRemove.Size = '225, 48'
	$calendarSetRemove.TabIndex = 3
	$calendarSetRemove.TabStop = $True
	$calendarSetRemove.Text = 'Remove'
	$calendarSetRemove.UseVisualStyleBackColor = $True
	#
	# calendarSetOwner
	#
	$calendarSetOwner.Location = '12, 156'
	$calendarSetOwner.Margin = '6, 6, 6, 6'
	$calendarSetOwner.Name = 'calendarSetOwner'
	$calendarSetOwner.Size = '225, 48'
	$calendarSetOwner.TabIndex = 2
	$calendarSetOwner.TabStop = $True
	$calendarSetOwner.Text = 'Owner'
	$calendarSetOwner.UseVisualStyleBackColor = $True
	#
	# calendarSetWrite
	#
	$calendarSetWrite.Location = '12, 101'
	$calendarSetWrite.Margin = '6, 6, 6, 6'
	$calendarSetWrite.Name = 'calendarSetWrite'
	$calendarSetWrite.Size = '225, 48'
	$calendarSetWrite.TabIndex = 1
	$calendarSetWrite.TabStop = $True
	$calendarSetWrite.Text = 'Write'
	$calendarSetWrite.UseVisualStyleBackColor = $True
	#
	# calendarSetRead
	#
	$calendarSetRead.Location = '12, 46'
	$calendarSetRead.Margin = '6, 6, 6, 6'
	$calendarSetRead.Name = 'calendarSetRead'
	$calendarSetRead.Size = '225, 48'
	$calendarSetRead.TabIndex = 0
	$calendarSetRead.TabStop = $True
	$calendarSetRead.Text = 'Read'
	$calendarSetRead.UseVisualStyleBackColor = $True
	#
	# buttonCheckPermissions
	#
	$buttonCheckPermissions.Location = '723, 206'
	$buttonCheckPermissions.Margin = '6, 6, 6, 6'
	$buttonCheckPermissions.Name = 'buttonCheckPermissions'
	$buttonCheckPermissions.Size = '301, 46'
	$buttonCheckPermissions.TabIndex = 7
	$buttonCheckPermissions.Text = 'Check Permissions'
	$buttonCheckPermissions.UseVisualStyleBackColor = $True
	$buttonCheckPermissions.add_Click($buttonCheckPermissions_Click)
	#
	# calEmail
	#
	$calEmail.AutoSize = $True
	$calEmail.Location = '723, 36'
	$calEmail.Margin = '6, 0, 6, 0'
	$calEmail.Name = 'calEmail'
	$calEmail.Size = '186, 26'
	$calEmail.TabIndex = 0
	$calEmail.Text = 'Calendar Address'
	#
	# UserEmail
	#
	$UserEmail.Location = '723, 152'
	$UserEmail.Margin = '6, 6, 6, 6'
	$UserEmail.Name = 'UserEmail'
	$UserEmail.Size = '266, 32'
	$UserEmail.TabIndex = 5
	#
	# CalendarEmail
	#
	$CalendarEmail.Location = '723, 82'
	$CalendarEmail.Margin = '6, 6, 6, 6'
	$CalendarEmail.Name = 'CalendarEmail'
	$CalendarEmail.Size = '301, 32'
	$CalendarEmail.TabIndex = 6
	#
	# buttonSetPermissions
	#
	$buttonSetPermissions.Location = '723, 274'
	$buttonSetPermissions.Margin = '6, 6, 6, 6'
	$buttonSetPermissions.Name = 'buttonSetPermissions'
	$buttonSetPermissions.Size = '301, 46'
	$buttonSetPermissions.TabIndex = 8
	$buttonSetPermissions.Text = 'Set Permissions'
	$buttonSetPermissions.UseVisualStyleBackColor = $True
	$buttonSetPermissions.add_Click($buttonSetPermissions_Click)
	#
	# ForwardToInput
	#
	$ForwardToInput.Controls.Add($groupbox3)
	$ForwardToInput.Controls.Add($groupbox2)
	$ForwardToInput.Controls.Add($DelegateAccessField)
	$ForwardToInput.Controls.Add($DelegateAccessLabel)
	$ForwardToInput.Controls.Add($buttonCheckLicenses)
	$ForwardToInput.Controls.Add($buttonTerminateUser)
	$ForwardToInput.Controls.Add($ForwardTermedUserInput)
	$ForwardToInput.Controls.Add($ForwardEmailsTo)
	$ForwardToInput.Controls.Add($groupbox1)
	$ForwardToInput.Controls.Add($TerminatedUser)
	$ForwardToInput.Controls.Add($labelTerminatedUsersEmail)
	$ForwardToInput.BackColor = 'Control'
	$ForwardToInput.Location = '8, 40'
	$ForwardToInput.Margin = '6, 6, 6, 6'
	$ForwardToInput.Name = 'ForwardToInput'
	$ForwardToInput.Padding = '3, 3, 3, 3'
	$ForwardToInput.Size = '1077, 342'
	$ForwardToInput.TabIndex = 1
	$ForwardToInput.Text = 'Terminate User'
	#
	# groupbox3
	#
	$groupbox3.Controls.Add($RemoveLicenseOption)
	$groupbox3.Controls.Add($ChangePasswordOption)
	$groupbox3.Controls.Add($DisableAccountOption)
	$groupbox3.Controls.Add($DisableASOWAOption)
	$groupbox3.Controls.Add($RemoveFromDGOption)
	$groupbox3.Location = '50, 13'
	$groupbox3.Margin = '6, 6, 6, 6'
	$groupbox3.Name = 'groupbox3'
	$groupbox3.Padding = '6, 6, 6, 6'
	$groupbox3.Size = '285, 320'
	$groupbox3.TabIndex = 24
	$groupbox3.TabStop = $False
	$groupbox3.Text = 'Termination Options'
	#
	# RemoveLicenseOption
	#
	$RemoveLicenseOption.Location = '12, 91'
	$RemoveLicenseOption.Margin = '6, 6, 6, 6'
	$RemoveLicenseOption.Name = 'RemoveLicenseOption'
	$RemoveLicenseOption.RightToLeft = 'No'
	$RemoveLicenseOption.Size = '261, 48'
	$RemoveLicenseOption.TabIndex = 20
	$RemoveLicenseOption.Text = 'Remove Licenses'
	$RemoveLicenseOption.UseVisualStyleBackColor = $True
	#
	# ChangePasswordOption
	#
	$ChangePasswordOption.Location = '12, 142'
	$ChangePasswordOption.Margin = '6, 6, 6, 6'
	$ChangePasswordOption.Name = 'ChangePasswordOption'
	$ChangePasswordOption.RightToLeft = 'No'
	$ChangePasswordOption.Size = '261, 48'
	$ChangePasswordOption.TabIndex = 23
	$ChangePasswordOption.Text = 'Change Password'
	$ChangePasswordOption.UseVisualStyleBackColor = $True
	#
	# DisableAccountOption
	#
	$DisableAccountOption.Location = '12, 40'
	$DisableAccountOption.Margin = '6, 6, 6, 6'
	$DisableAccountOption.Name = 'DisableAccountOption'
	$DisableAccountOption.RightToLeft = 'No'
	$DisableAccountOption.Size = '238, 48'
	$DisableAccountOption.TabIndex = 19
	$DisableAccountOption.Text = 'Disable Account'
	$DisableAccountOption.UseVisualStyleBackColor = $True
	#
	# DisableASOWAOption
	#
	$DisableASOWAOption.Location = '12, 193'
	$DisableASOWAOption.Margin = '6, 6, 6, 6'
	$DisableASOWAOption.Name = 'DisableASOWAOption'
	$DisableASOWAOption.RightToLeft = 'No'
	$DisableASOWAOption.Size = '261, 48'
	$DisableASOWAOption.TabIndex = 21
	$DisableASOWAOption.Text = 'Disable AS/OWA'
	$DisableASOWAOption.UseVisualStyleBackColor = $True
	#
	# RemoveFromDGOption
	#
	$RemoveFromDGOption.Location = '12, 244'
	$RemoveFromDGOption.Margin = '6, 6, 6, 6'
	$RemoveFromDGOption.Name = 'RemoveFromDGOption'
	$RemoveFromDGOption.RightToLeft = 'No'
	$RemoveFromDGOption.Size = '256, 58'
	$RemoveFromDGOption.TabIndex = 22
	$RemoveFromDGOption.Text = 'Remove from Distribution Groups'
	$RemoveFromDGOption.UseVisualStyleBackColor = $True
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($DelegateAccessNo)
	$groupbox2.Controls.Add($DelegateAccessYes)
	$groupbox2.Location = '754, 203'
	$groupbox2.Margin = '6, 6, 6, 6'
	$groupbox2.Name = 'groupbox2'
	$groupbox2.Padding = '6, 6, 6, 6'
	$groupbox2.Size = '217, 130'
	$groupbox2.TabIndex = 0
	$groupbox2.TabStop = $False
	$groupbox2.Text = 'Delegate Access?'
	#
	# DelegateAccessNo
	#
	$DelegateAccessNo.Checked = $True
	$DelegateAccessNo.Location = '12, 80'
	$DelegateAccessNo.Margin = '6, 6, 6, 6'
	$DelegateAccessNo.Name = 'DelegateAccessNo'
	$DelegateAccessNo.Size = '170, 48'
	$DelegateAccessNo.TabIndex = 12
	$DelegateAccessNo.TabStop = $True
	$DelegateAccessNo.Text = 'No'
	$DelegateAccessNo.UseVisualStyleBackColor = $True
	$DelegateAccessNo.add_CheckedChanged($DelegateAccessNo_CheckedChanged)
	#
	# DelegateAccessYes
	#
	$DelegateAccessYes.Location = '12, 28'
	$DelegateAccessYes.Margin = '6, 6, 6, 6'
	$DelegateAccessYes.Name = 'DelegateAccessYes'
	$DelegateAccessYes.Size = '170, 48'
	$DelegateAccessYes.TabIndex = 11
	$DelegateAccessYes.Text = 'Yes'
	$DelegateAccessYes.UseVisualStyleBackColor = $True
	$DelegateAccessYes.add_CheckedChanged($DelegateAccessYes_CheckedChanged)
	#
	# DelegateAccessField
	#
	$DelegateAccessField.Enabled = $False
	$DelegateAccessField.Location = '415, 184'
	$DelegateAccessField.Margin = '6, 6, 6, 6'
	$DelegateAccessField.Name = 'DelegateAccessField'
	$DelegateAccessField.Size = '246, 32'
	$DelegateAccessField.TabIndex = 6
	#
	# DelegateAccessLabel
	#
	$DelegateAccessLabel.AutoSize = $True
	$DelegateAccessLabel.Enabled = $False
	$DelegateAccessLabel.Location = '440, 153'
	$DelegateAccessLabel.Margin = '6, 0, 6, 0'
	$DelegateAccessLabel.Name = 'DelegateAccessLabel'
	$DelegateAccessLabel.Size = '206, 26'
	$DelegateAccessLabel.TabIndex = 1
	$DelegateAccessLabel.Text = 'Delegate Access To'
	#
	# buttonCheckLicenses
	#
	$buttonCheckLicenses.Location = '391, 287'
	$buttonCheckLicenses.Margin = '6, 6, 6, 6'
	$buttonCheckLicenses.Name = 'buttonCheckLicenses'
	$buttonCheckLicenses.Size = '295, 46'
	$buttonCheckLicenses.TabIndex = 8
	$buttonCheckLicenses.Text = 'Check Licenses'
	$buttonCheckLicenses.UseVisualStyleBackColor = $True
	$buttonCheckLicenses.add_Click($buttonCheckLicenses_Click)
	#
	# buttonTerminateUser
	#
	$buttonTerminateUser.Location = '391, 229'
	$buttonTerminateUser.Margin = '6, 6, 6, 6'
	$buttonTerminateUser.Name = 'buttonTerminateUser'
	$buttonTerminateUser.Size = '295, 46'
	$buttonTerminateUser.TabIndex = 7
	$buttonTerminateUser.Text = 'Terminate User'
	$buttonTerminateUser.UseVisualStyleBackColor = $True
	$buttonTerminateUser.add_Click($buttonTerminateUser_Click)
	#
	# ForwardTermedUserInput
	#
	$ForwardTermedUserInput.Enabled = $False
	$ForwardTermedUserInput.Location = '415, 111'
	$ForwardTermedUserInput.Margin = '6, 6, 6, 6'
	$ForwardTermedUserInput.Name = 'ForwardTermedUserInput'
	$ForwardTermedUserInput.Size = '246, 32'
	$ForwardTermedUserInput.TabIndex = 5
	#
	# ForwardEmailsTo
	#
	$ForwardEmailsTo.AutoSize = $True
	$ForwardEmailsTo.Location = '440, 77'
	$ForwardEmailsTo.Margin = '6, 0, 6, 0'
	$ForwardEmailsTo.Name = 'ForwardEmailsTo'
	$ForwardEmailsTo.Size = '200, 26'
	$ForwardEmailsTo.TabIndex = 5
	$ForwardEmailsTo.Text = 'Forward Emails To:'
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($EnableForwardingNo)
	$groupbox1.Controls.Add($EnableForwardingYes)
	$groupbox1.Location = '754, 13'
	$groupbox1.Margin = '6, 6, 6, 6'
	$groupbox1.Name = 'groupbox1'
	$groupbox1.Padding = '6, 6, 6, 6'
	$groupbox1.Size = '217, 130'
	$groupbox1.TabIndex = 0
	$groupbox1.TabStop = $False
	$groupbox1.Text = 'Forward Emails?'
	#
	# EnableForwardingNo
	#
	$EnableForwardingNo.Checked = $True
	$EnableForwardingNo.Location = '12, 76'
	$EnableForwardingNo.Margin = '6, 6, 6, 6'
	$EnableForwardingNo.Name = 'EnableForwardingNo'
	$EnableForwardingNo.Size = '170, 48'
	$EnableForwardingNo.TabIndex = 10
	$EnableForwardingNo.TabStop = $True
	$EnableForwardingNo.Text = 'No'
	$EnableForwardingNo.UseVisualStyleBackColor = $True
	$EnableForwardingNo.add_CheckedChanged($EnableForwardingNo_CheckedChanged)
	#
	# EnableForwardingYes
	#
	$EnableForwardingYes.Location = '12, 28'
	$EnableForwardingYes.Margin = '6, 6, 6, 6'
	$EnableForwardingYes.Name = 'EnableForwardingYes'
	$EnableForwardingYes.Size = '170, 48'
	$EnableForwardingYes.TabIndex = 9
	$EnableForwardingYes.Text = 'Yes'
	$EnableForwardingYes.UseVisualStyleBackColor = $True
	$EnableForwardingYes.add_CheckedChanged($EnableForwardingYes_CheckedChanged)
	#
	# TerminatedUser
	#
	$TerminatedUser.Location = '415, 41'
	$TerminatedUser.Margin = '6, 6, 6, 6'
	$TerminatedUser.Name = 'TerminatedUser'
	$TerminatedUser.Size = '246, 32'
	$TerminatedUser.TabIndex = 4
	#
	# labelTerminatedUsersEmail
	#
	$labelTerminatedUsersEmail.AutoSize = $True
	$labelTerminatedUsersEmail.Location = '415, 9'
	$labelTerminatedUsersEmail.Margin = '6, 0, 6, 0'
	$labelTerminatedUsersEmail.Name = 'labelTerminatedUsersEmail'
	$labelTerminatedUsersEmail.Size = '246, 26'
	$labelTerminatedUsersEmail.TabIndex = 0
	$labelTerminatedUsersEmail.Text = 'Terminated Users Email'
	#
	# GroupTab1
	#
	$GroupTab1.Controls.Add($labelToBeImplemented)
	$GroupTab1.BackColor = 'Control'
	$GroupTab1.Location = '8, 40'
	$GroupTab1.Margin = '6, 6, 6, 6'
	$GroupTab1.Name = 'GroupTab1'
	$GroupTab1.Padding = '3, 3, 3, 3'
	$GroupTab1.Size = '1077, 342'
	$GroupTab1.TabIndex = 2
	$GroupTab1.Text = 'Group Control'
	#
	# labelToBeImplemented
	#
	$labelToBeImplemented.AutoSize = $True
	$labelToBeImplemented.Location = '437, 158'
	$labelToBeImplemented.Margin = '6, 0, 6, 0'
	$labelToBeImplemented.Name = 'labelToBeImplemented'
	$labelToBeImplemented.Size = '202, 26'
	$labelToBeImplemented.TabIndex = 0
	$labelToBeImplemented.Text = 'To Be Implemented'
	#
	# tabpage1
	#
	$tabpage1.Controls.Add($label1)
	$tabpage1.BackColor = 'Control'
	$tabpage1.Location = '8, 40'
	$tabpage1.Margin = '6, 6, 6, 6'
	$tabpage1.Name = 'tabpage1'
	$tabpage1.Padding = '3, 3, 3, 3'
	$tabpage1.Size = '1077, 342'
	$tabpage1.TabIndex = 3
	$tabpage1.Text = 'SharePoint Control'
	#
	# label1
	#
	$label1.AutoSize = $True
	$label1.Location = '437, 158'
	$label1.Margin = '6, 0, 6, 0'
	$label1.Name = 'label1'
	$label1.Size = '202, 26'
	$label1.TabIndex = 0
	$label1.Text = 'To Be Implemented'
	#
	# fontdialog1
	#
	$groupbox3.ResumeLayout()
	$groupbox2.ResumeLayout()
	$tabpage1.ResumeLayout()
	$GroupTab1.ResumeLayout()
	$groupbox1.ResumeLayout()
	$ForwardToInput.ResumeLayout()
	$emailControl1.ResumeLayout()
	$calendarTab1.ResumeLayout()
	$tabs1.ResumeLayout()
	$formVERMicrosoftOffice36.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formVERMicrosoftOffice36.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formVERMicrosoftOffice36.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formVERMicrosoftOffice36.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formVERMicrosoftOffice36.ShowDialog()

} #End Function

#Call the form
Show-VEROFfice365Gui_psf | Out-Null
